AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  StageName:
    Description: Etapa de implantação. Utilizada também para definir ambiente de execução.
    Type: String
    AllowedValues:
      - prod
      - dev

  DatabaseHost:
    Description: URI do host do banco de dados
    Type: String

  DatabasePort:
    Description: Porta do host do banco de dados
    Type: String

  DatabaseUser:
    Description: Nome de usuário do banco de dados
    Type: String

  DatabasePass:
    Description: Senha do usuário do banco de dados
    Type: String

  DatabaseName:
    Description: Nome do banco de dados
    Type: String

  SecurityGroupId:
    Description: ID do security group atrelado à VPC e ao Load Balancer
    Type: String
    Default: ""

  LoadBalancerSubnetIdList:
    Description: Lista de subnets do Load Balancer
    Type: CommaDelimitedList
    Default: ""

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        ENVIRONMENT: !Ref StageName
        DATABASE_HOST: !Ref DatabaseHost
        DATABASE_PORT: !Ref DatabasePort
        DATABASE_USER: !Ref DatabaseUser
        DATABASE_PASS: !Ref DatabasePass
        DATABASE_NAME: !Ref DatabaseName

Conditions:
  DevelopmentOnlyResources: !Equals
    - !Ref StageName
    - dev

Resources:
  VpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties:
      Name: "fiap-vpc-link-api-gateway-load-balancer"
      SecurityGroupIds:
        - !Ref SecurityGroupId
      SubnetIds: !Ref LoadBalancerSubnetIdList

  ApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref StageName
      Auth:
        DefaultAuthorizer: TokenAuthorizer
        Authorizers:
          TokenAuthorizer:
            FunctionArn: !GetAtt TokenAuthorizerFunction.Arn
            AuthorizerPayloadFormatVersion: "1.0"
            Identity:
              Headers:
                - Authorization # Deverá conter o CPF do cliente

  TokenAuthorizerFunction:
    Type: AWS::Serverless::Function
    Name: "fiap-lambda-authorizer"
    Properties:
      Handler: src/handlers/tokenAuthorizer.handler

  # Usado apenas para testes locais, não é criado em prod
  DestinationTestFunction:
    Condition: DevelopmentOnlyResources # Evita criar o Lambda em prod
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/destinationTest.handler
      Events:
        TestAuthorizer:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /test
            Method: GET
